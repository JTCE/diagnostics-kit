@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<ApplicationGridModel>

@section style {
<style type="text/css">
    .MusketeerInfo {
        display: none;
    }

    .table-fixed {
        table-layout: fixed;
    }

    .shorten {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }

    td.center {
        text-align: center
    }

    .appname {
        word-break: break-word
    }
</style>
}

@section scripts {
<script type="text/javascript">
    $(function () {
        $('a.appname').on('click', function () {
            var encpath = $(this).attr('data-encpath');
            var name = $(this).text();

            // check if we don't already have such a dialog
            if ($('#info' + encpath).length) {
                $('#info' + encpath).modal();
            } else {
                $.get('conf/appsrvconfig/' + encpath, function (data) {
                    // create a new modal
                    var clonedDlg = $('#modelDialog').clone();
                    clonedDlg.attr('id', 'info' + encpath);
                    // fill modal content
                    $('h4', clonedDlg).text(name);
                    if (data && data.length > 0) {
                        $(data).each(function (ind, elem) {
                            var html = "<div class=\"panel panel-primary\">" + "<div class=\"panel-heading\"><strong>Server: " +
                            elem.server + "</strong></div><div class=\"panel-body\">";

                            if (elem.appPoolName) {
                                html += "<p>Application pool: <strong>" + elem.appPoolName + "</strong></p>";
                            }
                            html += "<p>Application path: <strong>" + elem.appPath + "</strong></p>";

                            if (elem.bindings && elem.bindings.length > 0) {
                                "<ul class=\"list-group\"><li class=\"list-group-item list-group-item-info\">Bindings</li>";
                                for (var i = 0; i < elem.bindings.length; i++) {
                                    html += "<li class=\"list-group-item\">" + elem.bindings[i] + "</li>";
                                }
                                html += "</ul>";
                            }
                            html += "</div></div>";
                            $('.modal-body', clonedDlg).append(html);
                        })
                    } else {
                        $('.MusketeerInfo', clonedDlg).show();
                    }

                    clonedDlg.after('#modelDialog');
                    clonedDlg.modal();
                }, 'json').fail(function () {
                    alert('Error occurred while connecting the server. Please try again.');
                });
            }
        });
    });
</script>
}

<div class="container-fluid">
    <div class="panel panel-primary">
        <div class="panel-heading">Applications Grid <small>(last update at: @Model.LastUpdateTime.ToString("HH:mm:ss"))</small></div>
        <div class="panel-body">
            @if (Model.ApplicationStatuses.Count == 0) {
            <span>
                No logs found - maybe there are some <a href="~/apps">waiting excluded applications</a> or you need to install one of the
                <a href="https://github.com/lowleveldesign/diagnostics-kit/wiki#2-logs-collection" target="_blank">harvesters</a> in your applications.
            </span>
            }
            else
            {
            <span>
                You may change application names, maintenance configuration or add new applications to the grid on
                <strong><a href="~/apps">the application configuration</a></strong> page.
            </span>
            }
        </div>

        @if (Model.ApplicationStatuses.Count > 0)
        {
        <table class="table table-bordered table-condensed">
            <thead>
                <tr>
                    <th>Application</th>
                    <th>All servers</th>
                    @foreach (var srv in Model.Servers)
                    {
                    <th>@srv</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var appstat in Model.ApplicationStatuses)
                {
                    var app = Model.Applications[appstat.Key];
                    <tr>
                        <td><a href="#" class="appname" title="Show application settings" data-encpath="@app.GetBase64EncodedKey()">@app.Name</a></td>
                        <td class="center">
                            <a class="btn btn-sm btn-default" href="~/logs/@app.GetBase64EncodedKey()" title="Show application logs">
                                <span class="glyphicon glyphicon-align-left" aria-hidden="true"></span>
                            </a>
                        </td>
                        @foreach (var srv in Model.Servers)
                        {
                            if (appstat.Value.ContainsKey(srv))
                            {
                                var srvstat = appstat.Value[srv];
                                if (srvstat.ContainsErrorInformation())
                                {
                                    <td class="center danger">
                                        <a class="btn btn-sm btn-danger" href="~/logs/@app.GetBase64EncodedKey()/@srv" title="@(srvstat.LastErrorTypeName ?? "Unknown")">
                                            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                        </a>
                                    </td>
                                }
                                else if (srvstat.ContainsPerformanceData())
                                {
                                    <td class="center success">
                                        <a class="btn btn-sm btn-default" href="~/logs/@app.GetBase64EncodedKey()/@srv" title="Show application logs">
                                            <small>@srvstat.Cpu.ToString("0")%</small>,
                                            <small>@((srvstat.Memory / 1048576f).ToString("#,0."))MB</small>
                                        </a>
                                    </td>
                                } else {
                                    <td class="center @(DateTime.UtcNow.Subtract(srvstat.LastUpdateTimeUtc) < TimeSpan.FromSeconds(60) ? "success" : "")">
                                        <a class="btn btn-sm btn-default" href="~/logs/@app.GetBase64EncodedKey()/@srv" title="Show application logs">
                                            <span class="glyphicon glyphicon-align-left" aria-hidden="true"></span>
                                        </a>
                                    </td>
                                }
                            }
                            else
                            {
                                <td></td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
        }
    </div>

    <div id="modelDialog" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body">
                    <div class="MusketeerInfo">
                        <div class="alert alert-warning" role="alert"><strong>I'm sorry, but no configuration data is available for this application.</strong></div>
                        Configuration data is generated by the
                        <a href="https://github.com/lowleveldesign/diagnostics-kit/wiki/musketeer" target="_blank">Musketeer</a> application,
                        which must be installed on the web application servers.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>