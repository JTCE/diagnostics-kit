@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<ApplicationLogFilterModel>

@section style {
<style type="text/css">
    .form-inline .form-group {
        margin: 5px 3px;
    }

    .table-fixed {
        table-layout: fixed;
    }

    td.odd {
        background-color: #DDE9FF;
    }

    .hidden {
        display: none;
    }

    .breakwords {
        white-space: normal;
        word-break: break-all;
    }

    .truncate {
      width: 750px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
</style>
}

@section scripts {
<script type="text/javascript">
    $(function () {
        $('.lnk_message').on('click', function () {
            $(this).closest('tr').next('tr.tr_message:first').toggleClass('hidden');
            return false;
        });

        $('#lnk_collapseall').on('click', function () {
            $('tr.tr_message').addClass('hidden');
            return false;
        });
        $('#lnk_expandall').on('click', function () {
            $('tr.tr_message').removeClass('hidden');
            return false;
        });
    });
</script>
}

<div class="container">
    <div class="panel panel-primary">
        <!-- Default panel contents -->
        <div class="panel-heading">
            Showing logs of the <strong title="@Model.apppath">@Model.appname</strong> application from
            <strong>@(Model.server == null ? "all servers" : Model.server)</strong>
        </div>
        <div class="panel-body">
            <form class="form-inline" method="get">
                <div class="form-group">
                    <label for="dfrom" class="control-label">Date from:</label>
                    <input id="dfrom" name="dfrom" type="text" class="form-control" value="@Model.dfrom" />
                    <label for="dto" class="control-label">to:</label>
                    <input id="dto" name="dto" type="text" class="form-control" value="@Model.dto" />
                </div>
                <div class="form-group">
                    <label for="lfrom">Level from:</label>
                    <select id="lfrom" name="lfrom" class="form-control">
                        @foreach (var opt in ApplicationLogFilterModel.Levels) {
                            if (opt.Item1 == Model.lfrom) {
                                <option selected="selected" value="@opt.Item1">@opt.Item2</option>
                            } else {
                                <option value="@opt.Item1">@opt.Item2</option>
                            }
                        }
                    </select>
                    <label for="lto">to:</label>
                    <select id="lto" name="lto" class="form-control">
                        @foreach (var opt in ApplicationLogFilterModel.Levels) {
                            if (opt.Item1 == Model.lto) {
                                <option selected="selected" value="@opt.Item1">@opt.Item2</option>
                            } else {
                                <option value="@opt.Item1">@opt.Item2</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="logger" class="control-label">Logger:</label>
                    <input id="logger" name="logger" type="text" class="form-control" style="width: 250px" value="@Model.logger" />
                </div>
                <div class="form-group">

                    <label for="keywords" class="control-label">
                        Keywords 
                        <a id="lnk_keywordshelp" href="#keywordshelp" data-toggle="collapse" 
                           aria-expanded="false" aria-controls="keywordshelp"><span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span></a>:
                    </label>
                    <input id="keywords" name="keywords" type="text" class="form-control" style="width: 400px" value="@Model.keywords" />
                </div>
                <button type="submit" class="btn btn-primary">
                    <span class="glyphicon glyphicon glyphicon-filter"></span> Filter
                </button>
            </form>
            <div id="keywordshelp" class="collapse">
                <div class="well">
                    You may freely type any text you want, but only log stores supporting full-text search will give you expected results.
                    However, you may use some special keywords to search specific fields of the log records. The syntax is
                    <strong>keyword:'search string'</strong>. Accepted keywords are: <strong>http</strong> (HTTP status code),
                    <strong>url</strong> (called URL), <strong>ip</strong> (client IP address), <strong>service</strong> (Windows service name).
                </div>
            </div>
        </div>

        @if (ViewBag.Logs != null) {
        var result = (ApplicationLogSearchResults)ViewBag.Logs;
        int loopCount = 0;
        <ul class="nav nav-pills">
            <li role="presentation" class="dropdown"><a id="lnk_expandall" href="#">Expand all</a></li>
            <li role="presentation" class="dropdown"><a id="lnk_collapseall" href="#">Collapse all</a></li>
        </ul>
        <table class="table table-condensed">
            <thead>
                <tr>
                    <th class="col-sm-2">Time</th>
                    <th class="col-sm-1">Log level</th>
                    <th class="col-sm-2">Logger</th>
                    <th class="col-sm-7">Message</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var l in result.FoundItems) {
                    loopCount++;
                    <tr>
                        <td class="@Extensions.ReturnIfOdd(loopCount, "odd")">
                            <span class="label label-default">@l.TimeUtc.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss.fff")</span>
                        </td>
                        <td class="@Extensions.ReturnIfOdd(loopCount, "odd")"><span class="label label-@(l.GetBootstrapClassForLevel())">@l.LogLevel.ToString()</span></td>
                        <td class="@Extensions.ReturnIfOdd(loopCount, "odd")">@l.LoggerName</td>
                        <td class="@Extensions.ReturnIfOdd(loopCount, "odd")">
                            <div class="truncate">
                                @if (l.HasPerformanceStats()) {
                                    <span class="label label-primary">@l.GetCounterValueIfAvailable("CPU")</span>
                                    <span class="label label-primary">@l.GetCounterValueIfAvailable("Memory")</span>
                                }&nbsp;
                                <a href="#" class="lnk_message" title="Click to expand">@l.GetLogMessage()</a>
                            </div>
                        </td>
                    </tr>
                    <tr class="tr_message hidden">
                        <td colspan="4" class="@Extensions.ReturnIfOdd(loopCount, "odd")">
                            <div class="loginfo breakwords">
                                <strong>Messsage:</strong>@l.Message<br />
                                <strong>Server:</strong> @l.Server<br />
                                @if (l.HasExceptionInformation()) {
                                    <hr />
                                    <strong>Exception type:</strong> @l.ExceptionType<br />
                                    <strong>Exception message:</strong> @l.ExceptionMessage<br />
                                    <strong>Exception additional info:</strong> @l.ExceptionAdditionalInfo<br />
                                }
                                @if (l.AdditionalFields != null && l.AdditionalFields.Count > 0) {
                                    <hr />
                                    @foreach (var ad in l.AdditionalFields) {
                                        <text><strong>@ad.Key:</strong> @(ad.Value + "\r\n")</text><br />
                                    }
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <hr />
        <p class="text-center">
            @if (result.Offset > 0) {
                <a href="@Request.Url.BasePath@Request.Path@Request.Url.ReplaceQueryParameterValue("off", result.Offset - result.Limit)">&lt;&lt; Newer</a>
            }
            @if (!result.IsLastPage) {
                <a href="@Request.Url.BasePath@Request.Path@Request.Url.ReplaceQueryParameterValue("off", result.Offset + result.Limit)">Older &gt;&gt;</a>
            }
        </p>
        }
    </div>
</div>