@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<ApplicationLogFilterModel>

@section style {
    <style type="text/css">
        .form-inline .form-group {
            margin: 5px 3px;
        }

        .hidden {
            display: none;
        }

        .shorten {
            white-space: normal;
        }
    </style>
}

@section scripts {
    <script type="text/javascript">
        $(function () {
            $('.lnk_message').on('click', function () {
                $(this).closest('tr').next('tr.tr_message:first').toggleClass('hidden');
                return false;
            });
            $('.lnk_exception').on('click', function () {
                $(this).closest('tr').nextAll('tr.tr_exception:first').toggleClass('hidden');
                return false;
            });
            $('.lnk_perf').on('click', function () {
                $(this).closest('tr').nextAll('tr.tr_perf:first').toggleClass('hidden');
                return false;
            });
            $('.lnk_more').on('click', function () {
                $(this).closest('tr').nextAll('tr.tr_more:first').toggleClass('hidden');
                return false;
            });

            $('#lnk_collapseall').on('click', function () {
                $('tr.tr_message').addClass('hidden');
                $('tr.tr_exception').addClass('hidden');
                $('tr.tr_perf').addClass('hidden');
                $('tr.tr_more').addClass('hidden');
                return false;
            });
            $('#lnk_expandall').on('click', function () {
                $('tr.tr_message').removeClass('hidden');
                $('tr.tr_exception').removeClass('hidden');
                $('tr.tr_perf').removeClass('hidden');
                $('tr.tr_more').removeClass('hidden');
                return false;
            });
            $('#lnk_expandmessages').on('click', function () {
                $('tr.tr_message').removeClass('hidden');
                return false;
            });
            $('#lnk_expandexceptions').on('click', function () {
                $('tr.tr_exception').removeClass('hidden');
                return false;
            });
        });
    </script>
}

@functions {
    String GetBootstrapClassForLog(LogRecord.ELogLevel level)
    {
        switch (level) {
            case LogRecord.ELogLevel.Warning:
                return "warning";
            case LogRecord.ELogLevel.Error:
            case LogRecord.ELogLevel.Critical:
                return "danger";
            case LogRecord.ELogLevel.Info:
                return "info";
            default:
                return String.Empty;
        }
    }
}

<div class="panel panel-default">
    <!-- Default panel contents -->
    <div class="panel-heading">
        Showing logs of the <strong title="@Model.apppath">@Model.appname</strong> application from
        <strong>@(Model.server == null ? "all servers" : Model.server)</strong>
    </div>
    <div class="panel-body">
        <form class="form-inline" method="get">
            <div class="form-group">
                <label for="dfrom" class="control-label">Date from:</label>
                <input id="dfrom" name="dfrom" type="text" class="form-control" value="@Model.dfrom" />
                <label for="dto" class="control-label">to:</label>
                <input id="dto" name="dto" type="text" class="form-control" value="@Model.dto" />
            </div>
            <div class="form-group">
                <label for="lfrom">Level from:</label>
                <select id="lfrom" name="lfrom" class="form-control">
                    @foreach (var opt in ApplicationLogFilterModel.Levels) {
                        if (opt.Item1 == Model.lfrom) {
                            <option selected="selected" value="@opt.Item1">@opt.Item2</option>
                        } else {
                            <option value="@opt.Item1">@opt.Item2</option>
                        }
                    }
                </select>
                <label for="lto">to:</label>
                <select id="lto" name="lto" class="form-control">
                    @foreach (var opt in ApplicationLogFilterModel.Levels) {
                        if (opt.Item1 == Model.lto) {
                            <option selected="selected" value="@opt.Item1">@opt.Item2</option>
                        } else {
                            <option value="@opt.Item1">@opt.Item2</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="logger" class="control-label">Logger:</label>
                <input id="logger" name="logger" type="text" class="form-control" style="width: 300px" value="@Model.logger" />
            </div>
            <div class="form-group">

                <label for="keywords" class="control-label">Keywords:</label>
                <input id="keywords" name="keywords" type="text" class="form-control" style="width: 400px" value="@Model.keywords" />
            </div>
            <button type="submit" class="btn btn-default">Filter</button>
        </form>
    </div>

    @if (ViewBag.Logs != null) {
        var result = (ApplicationLogSearchResults)ViewBag.Logs;
        int i = 0;
        <ul class="nav nav-pills">
            <li role="presentation" class="dropdown"><a id="lnk_expandall" href="#">Expand all</a></li>
            <li role="presentation" class="dropdown"><a id="lnk_expandmessages" href="#">Expand messages</a></li>
            <li role="presentation" class="dropdown"><a id="lnk_expandexceptions" href="#">Expand exceptions</a></li>
            <li role="presentation" class="dropdown"><a id="lnk_collapseall" href="#">Collapse all</a></li>
        </ul>
        <table class="table">
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Log level</th>
                    <th>Logger</th>
                    <th>Message</th>
                    <th>Exeption</th>
                    <th>Performance</th>
                    <th>Additional data</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var l in result.FoundItems) {
                    var bootstrapClass = GetBootstrapClassForLog(l.LogLevel);
                    <tr>
                        <td class="@bootstrapClass"><strong>@l.TimeUtc.ToLocalTime().ToString("yyyy-MM-dd HH:mm.fff")</strong></td>
                        <td class="@bootstrapClass">@l.LogLevel.ToString()</td>
                        <td><div class="shorten">@l.LoggerName</div></td>
                        <td><div class="shorten"><a href="#" class="lnk_message" title="Click to expand">@l.Message</a></div></td>
                        <td><div class="shorten"><a href="#" class="lnk_exception" title="Click to expand">@l.ExceptionType</a></div></td>
                        <td>
                            @if (l.PerformanceData != null && l.PerformanceData.Count > 0) {
                                <a href="#" class="lnk_perf" title="Click to expand">
                                    CPU: @l.PerformanceData.GetCounterValueIfAvailable("CPU") | Mem: @l.PerformanceData.GetCounterValueIfAvailable("Memory")
                                </a>
                            }
                        </td>
                        <td>
                            @if (l.AdditionalFields != null && l.AdditionalFields.Count > 0) {
                                <a href="#" class="lnk_more" title="Click to display additional data">more &gt;&gt;</a>
                            }
                        </td>
                    </tr>
                    <tr class="tr_message hidden">
                        <td colspan="7">
                            Message: @l.Message
                        </td>
                    </tr>
                    <tr class="tr_exception hidden">
                        <td colspan="7">
                            @if (!String.IsNullOrEmpty(l.ExceptionType)) {
<pre>
Exception type: @l.ExceptionType
Exception message: @l.ExceptionMessage
Exception additional info: @l.ExceptionAdditionalInfo
</pre>
                            } else { <text>No exception</text> }
                        </td>
                    </tr>
                    <tr class="tr_perf hidden">
                        <td colspan="7">
                            Process Id: @l.ProcessId, Thread Id: @l.ThreadId<br />
                            @if (l.PerformanceData != null && l.PerformanceData.Count > 0) {
                                foreach (var pd in l.PerformanceData) {
                                    <text>@pd.Key: @pd.Value.ToString("#,0.00")</text><br />
                                }
                            }
                        </td>
                    </tr>
                    <tr class="tr_more hidden">
                        <td colspan="7">
                            @if (l.AdditionalFields != null && l.AdditionalFields.Count > 0) {
<pre>
    @foreach (var ad in l.AdditionalFields) {
                                <text>@ad.Key: @(ad.Value + "\r\n")</text>
    }
</pre>
                            } else {
                                <text>No additional data</text>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <hr />
        <p class="text-center">
            @if (result.Offset > 0) {
                <a href="@Request.Url.BasePath@Request.Path@Request.Url.ReplaceQueryParameterValue("off", result.Offset - result.Limit)">&lt;&lt; Newer</a>
            }
            @if (!result.IsLastPage) {
                <a href="@Request.Url.BasePath@Request.Path@Request.Url.ReplaceQueryParameterValue("off", result.Offset + result.Limit)">Older &gt;&gt;</a>
            }
        </p>
    }
</div>
